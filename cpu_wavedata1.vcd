$date
	Thu Jun 13 13:17:44 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 1 $ RESET $end
$var integer 32 % i [31:0] $end
$scope module mycpu $end
$var wire 1 # CLK $end
$var wire 32 & INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 ' ZERO $end
$var wire 3 ( WRITEREG [2:0] $end
$var wire 1 ) WRITEENABLE $end
$var wire 32 * TARGET [31:0] $end
$var wire 1 + SHIFT_op $end
$var wire 8 , REGOUT2 [7:0] $end
$var wire 8 - REGOUT1 [7:0] $end
$var wire 3 . READREG2 [2:0] $end
$var wire 3 / READREG1 [2:0] $end
$var wire 32 0 PCADDER [31:0] $end
$var wire 8 1 OFFSET [7:0] $end
$var wire 8 2 NEGATIVE_NUM [7:0] $end
$var wire 32 3 MUX3_OUT [31:0] $end
$var wire 8 4 MUX2_OUT [7:0] $end
$var wire 1 5 MUX2SELECT $end
$var wire 8 6 MUX1_OUT [7:0] $end
$var wire 1 7 MUX1SELECT $end
$var wire 1 8 JUMP $end
$var wire 8 9 IMMEDIATE [7:0] $end
$var wire 1 : FLOWSELECT $end
$var wire 1 ; BRANCH $end
$var wire 3 < AMOUNT [2:0] $end
$var wire 8 = ALURESULT [7:0] $end
$var wire 3 > ALUOP [2:0] $end
$var reg 32 ? PC [31:0] $end
$scope module ALU $end
$var wire 8 @ sra_data [7:0] $end
$var wire 8 A shift_data [7:0] $end
$var wire 8 B ror_data [7:0] $end
$var wire 8 C or_data [7:0] $end
$var wire 8 D mult_data [7:0] $end
$var wire 8 E forward_data [7:0] $end
$var wire 8 F and_data [7:0] $end
$var wire 8 G add_data [7:0] $end
$var wire 1 ' ZERO $end
$var wire 1 + SHIFT_op $end
$var wire 3 H SELECT [2:0] $end
$var wire 8 I DATA2 [7:0] $end
$var wire 8 J DATA1 [7:0] $end
$var wire 3 K AMOUNT [2:0] $end
$var reg 8 L RESULT [7:0] $end
$scope module add_inst $end
$var wire 8 M RESULT [7:0] $end
$var wire 8 N DATA2 [7:0] $end
$var wire 8 O DATA1 [7:0] $end
$upscope $end
$scope module and_inst $end
$var wire 8 P RESULT [7:0] $end
$var wire 8 Q DATA2 [7:0] $end
$var wire 8 R DATA1 [7:0] $end
$upscope $end
$scope module forward_inst $end
$var wire 8 S RESULT [7:0] $end
$var wire 8 T DATA2 [7:0] $end
$var wire 8 U DATA1 [7:0] $end
$upscope $end
$scope module mult_inst $end
$var wire 8 V RESULT [7:0] $end
$var wire 1 W sum5 $end
$var wire 8 X OUT [7:0] $end
$var wire 8 Y DATA2 [7:0] $end
$var wire 8 Z DATA1 [7:0] $end
$var wire 1 [ C5 $end
$scope module FA0_0 $end
$var wire 1 \ A $end
$var wire 1 ] B $end
$var wire 1 ^ Cin $end
$var wire 1 _ SUM $end
$var wire 1 ` Cout $end
$upscope $end
$scope module FA0_1 $end
$var wire 1 a A $end
$var wire 1 b B $end
$var wire 1 ` Cin $end
$var wire 1 c SUM $end
$var wire 1 d Cout $end
$upscope $end
$scope module FA0_2 $end
$var wire 1 e A $end
$var wire 1 f B $end
$var wire 1 d Cin $end
$var wire 1 g SUM $end
$var wire 1 h Cout $end
$upscope $end
$scope module FA0_3 $end
$var wire 1 i A $end
$var wire 1 j B $end
$var wire 1 h Cin $end
$var wire 1 k SUM $end
$var wire 1 l Cout $end
$upscope $end
$scope module FA0_4 $end
$var wire 1 m A $end
$var wire 1 n B $end
$var wire 1 l Cin $end
$var wire 1 o SUM $end
$var wire 1 p Cout $end
$upscope $end
$scope module FA0_5 $end
$var wire 1 q A $end
$var wire 1 r B $end
$var wire 1 p Cin $end
$var wire 1 s SUM $end
$var wire 1 t Cout $end
$upscope $end
$scope module FA0_6 $end
$var wire 1 u A $end
$var wire 1 v B $end
$var wire 1 t Cin $end
$var wire 1 w SUM $end
$var wire 1 x Cout $end
$upscope $end
$scope module FA1_0 $end
$var wire 1 c A $end
$var wire 1 y B $end
$var wire 1 z Cin $end
$var wire 1 { SUM $end
$var wire 1 | Cout $end
$upscope $end
$scope module FA1_1 $end
$var wire 1 g A $end
$var wire 1 } B $end
$var wire 1 | Cin $end
$var wire 1 ~ SUM $end
$var wire 1 !" Cout $end
$upscope $end
$scope module FA1_2 $end
$var wire 1 k A $end
$var wire 1 "" B $end
$var wire 1 !" Cin $end
$var wire 1 #" SUM $end
$var wire 1 $" Cout $end
$upscope $end
$scope module FA1_3 $end
$var wire 1 o A $end
$var wire 1 %" B $end
$var wire 1 $" Cin $end
$var wire 1 &" SUM $end
$var wire 1 '" Cout $end
$upscope $end
$scope module FA1_4 $end
$var wire 1 s A $end
$var wire 1 (" B $end
$var wire 1 '" Cin $end
$var wire 1 )" SUM $end
$var wire 1 *" Cout $end
$upscope $end
$scope module FA1_5 $end
$var wire 1 w A $end
$var wire 1 +" B $end
$var wire 1 *" Cin $end
$var wire 1 ," SUM $end
$var wire 1 -" Cout $end
$upscope $end
$scope module FA2_0 $end
$var wire 1 ~ A $end
$var wire 1 ." B $end
$var wire 1 /" Cin $end
$var wire 1 0" SUM $end
$var wire 1 1" Cout $end
$upscope $end
$scope module FA2_1 $end
$var wire 1 #" A $end
$var wire 1 2" B $end
$var wire 1 1" Cin $end
$var wire 1 3" SUM $end
$var wire 1 4" Cout $end
$upscope $end
$scope module FA2_2 $end
$var wire 1 &" A $end
$var wire 1 5" B $end
$var wire 1 4" Cin $end
$var wire 1 6" SUM $end
$var wire 1 7" Cout $end
$upscope $end
$scope module FA2_3 $end
$var wire 1 )" A $end
$var wire 1 8" B $end
$var wire 1 7" Cin $end
$var wire 1 9" SUM $end
$var wire 1 :" Cout $end
$upscope $end
$scope module FA2_4 $end
$var wire 1 ," A $end
$var wire 1 ;" B $end
$var wire 1 :" Cin $end
$var wire 1 <" SUM $end
$var wire 1 =" Cout $end
$upscope $end
$scope module FA3_0 $end
$var wire 1 3" A $end
$var wire 1 >" B $end
$var wire 1 ?" Cin $end
$var wire 1 @" SUM $end
$var wire 1 A" Cout $end
$upscope $end
$scope module FA3_1 $end
$var wire 1 6" A $end
$var wire 1 B" B $end
$var wire 1 A" Cin $end
$var wire 1 C" SUM $end
$var wire 1 D" Cout $end
$upscope $end
$scope module FA3_2 $end
$var wire 1 9" A $end
$var wire 1 E" B $end
$var wire 1 D" Cin $end
$var wire 1 F" SUM $end
$var wire 1 G" Cout $end
$upscope $end
$scope module FA3_3 $end
$var wire 1 <" A $end
$var wire 1 H" B $end
$var wire 1 G" Cin $end
$var wire 1 I" SUM $end
$var wire 1 J" Cout $end
$upscope $end
$scope module FA4_0 $end
$var wire 1 C" A $end
$var wire 1 K" B $end
$var wire 1 L" Cin $end
$var wire 1 M" SUM $end
$var wire 1 N" Cout $end
$upscope $end
$scope module FA4_1 $end
$var wire 1 F" A $end
$var wire 1 O" B $end
$var wire 1 N" Cin $end
$var wire 1 P" SUM $end
$var wire 1 Q" Cout $end
$upscope $end
$scope module FA4_2 $end
$var wire 1 I" A $end
$var wire 1 R" B $end
$var wire 1 Q" Cin $end
$var wire 1 S" SUM $end
$var wire 1 T" Cout $end
$upscope $end
$scope module FA5_0 $end
$var wire 1 P" A $end
$var wire 1 U" B $end
$var wire 1 V" Cin $end
$var wire 1 W" SUM $end
$var wire 1 [ Cout $end
$upscope $end
$scope module FA5_1 $end
$var wire 1 S" A $end
$var wire 1 X" B $end
$var wire 1 [ Cin $end
$var wire 1 W SUM $end
$var wire 1 Y" Cout $end
$upscope $end
$scope module FA6_0 $end
$var wire 1 W A $end
$var wire 1 Z" B $end
$var wire 1 [" Cin $end
$var wire 1 \" SUM $end
$var wire 1 ]" Cout $end
$upscope $end
$upscope $end
$scope module or_inst $end
$var wire 8 ^" RESULT [7:0] $end
$var wire 8 _" DATA2 [7:0] $end
$var wire 8 `" DATA1 [7:0] $end
$upscope $end
$scope module ror_inst $end
$var wire 8 a" ror_y [7:0] $end
$var wire 8 b" ror_x [7:0] $end
$var wire 8 c" RESULT [7:0] $end
$var wire 8 d" DATA2 [7:0] $end
$var wire 8 e" DATA1 [7:0] $end
$var wire 3 f" AMOUNT [2:0] $end
$scope module sr_ins_00 $end
$var wire 1 g" in0 $end
$var wire 1 h" in1 $end
$var wire 1 i" sel $end
$var wire 1 j" out $end
$upscope $end
$scope module sr_ins_01 $end
$var wire 1 k" in0 $end
$var wire 1 l" in1 $end
$var wire 1 m" sel $end
$var wire 1 n" out $end
$upscope $end
$scope module sr_ins_02 $end
$var wire 1 o" in0 $end
$var wire 1 p" in1 $end
$var wire 1 q" sel $end
$var wire 1 r" out $end
$upscope $end
$scope module sr_ins_03 $end
$var wire 1 s" in0 $end
$var wire 1 t" in1 $end
$var wire 1 u" sel $end
$var wire 1 v" out $end
$upscope $end
$scope module sr_ins_04 $end
$var wire 1 w" in0 $end
$var wire 1 x" in1 $end
$var wire 1 y" sel $end
$var wire 1 z" out $end
$upscope $end
$scope module sr_ins_05 $end
$var wire 1 {" in0 $end
$var wire 1 |" in1 $end
$var wire 1 }" sel $end
$var wire 1 ~" out $end
$upscope $end
$scope module sr_ins_06 $end
$var wire 1 !# in0 $end
$var wire 1 "# in1 $end
$var wire 1 ## sel $end
$var wire 1 $# out $end
$upscope $end
$scope module sr_ins_07 $end
$var wire 1 %# in0 $end
$var wire 1 &# in1 $end
$var wire 1 '# sel $end
$var wire 1 (# out $end
$upscope $end
$scope module sr_ins_08 $end
$var wire 1 )# in0 $end
$var wire 1 *# in1 $end
$var wire 1 +# sel $end
$var wire 1 ,# out $end
$upscope $end
$scope module sr_ins_09 $end
$var wire 1 -# in0 $end
$var wire 1 .# in1 $end
$var wire 1 /# sel $end
$var wire 1 0# out $end
$upscope $end
$scope module sr_ins_10 $end
$var wire 1 1# in0 $end
$var wire 1 2# in1 $end
$var wire 1 3# sel $end
$var wire 1 4# out $end
$upscope $end
$scope module sr_ins_11 $end
$var wire 1 5# in0 $end
$var wire 1 6# in1 $end
$var wire 1 7# sel $end
$var wire 1 8# out $end
$upscope $end
$scope module sr_ins_12 $end
$var wire 1 9# in0 $end
$var wire 1 :# in1 $end
$var wire 1 ;# sel $end
$var wire 1 <# out $end
$upscope $end
$scope module sr_ins_13 $end
$var wire 1 =# in0 $end
$var wire 1 ># in1 $end
$var wire 1 ?# sel $end
$var wire 1 @# out $end
$upscope $end
$scope module sr_ins_14 $end
$var wire 1 A# in0 $end
$var wire 1 B# in1 $end
$var wire 1 C# sel $end
$var wire 1 D# out $end
$upscope $end
$scope module sr_ins_15 $end
$var wire 1 E# in0 $end
$var wire 1 F# in1 $end
$var wire 1 G# sel $end
$var wire 1 H# out $end
$upscope $end
$scope module sr_ins_16 $end
$var wire 1 I# in0 $end
$var wire 1 J# in1 $end
$var wire 1 K# sel $end
$var wire 1 L# out $end
$upscope $end
$scope module sr_ins_17 $end
$var wire 1 M# in0 $end
$var wire 1 N# in1 $end
$var wire 1 O# sel $end
$var wire 1 P# out $end
$upscope $end
$scope module sr_ins_18 $end
$var wire 1 Q# in0 $end
$var wire 1 R# in1 $end
$var wire 1 S# sel $end
$var wire 1 T# out $end
$upscope $end
$scope module sr_ins_19 $end
$var wire 1 U# in0 $end
$var wire 1 V# in1 $end
$var wire 1 W# sel $end
$var wire 1 X# out $end
$upscope $end
$scope module sr_ins_20 $end
$var wire 1 Y# in0 $end
$var wire 1 Z# in1 $end
$var wire 1 [# sel $end
$var wire 1 \# out $end
$upscope $end
$scope module sr_ins_21 $end
$var wire 1 ]# in0 $end
$var wire 1 ^# in1 $end
$var wire 1 _# sel $end
$var wire 1 `# out $end
$upscope $end
$scope module sr_ins_22 $end
$var wire 1 a# in0 $end
$var wire 1 b# in1 $end
$var wire 1 c# sel $end
$var wire 1 d# out $end
$upscope $end
$scope module sr_ins_23 $end
$var wire 1 e# in0 $end
$var wire 1 f# in1 $end
$var wire 1 g# sel $end
$var wire 1 h# out $end
$upscope $end
$upscope $end
$scope module shift_inst $end
$var wire 8 i# sr_y [7:0] $end
$var wire 8 j# sr_x [7:0] $end
$var wire 8 k# sr_result [7:0] $end
$var wire 8 l# sl_y [7:0] $end
$var wire 8 m# sl_x [7:0] $end
$var wire 8 n# sl_result [7:0] $end
$var wire 1 + SHIFT_op $end
$var wire 8 o# RESULT [7:0] $end
$var wire 8 p# DATA2 [7:0] $end
$var wire 8 q# DATA1 [7:0] $end
$var wire 3 r# AMOUNT [2:0] $end
$scope module result_mux_0 $end
$var wire 1 s# in0 $end
$var wire 1 t# in1 $end
$var wire 1 + sel $end
$var wire 1 u# out $end
$upscope $end
$scope module result_mux_1 $end
$var wire 1 v# in0 $end
$var wire 1 w# in1 $end
$var wire 1 + sel $end
$var wire 1 x# out $end
$upscope $end
$scope module result_mux_2 $end
$var wire 1 y# in0 $end
$var wire 1 z# in1 $end
$var wire 1 + sel $end
$var wire 1 {# out $end
$upscope $end
$scope module result_mux_3 $end
$var wire 1 |# in0 $end
$var wire 1 }# in1 $end
$var wire 1 + sel $end
$var wire 1 ~# out $end
$upscope $end
$scope module result_mux_4 $end
$var wire 1 !$ in0 $end
$var wire 1 "$ in1 $end
$var wire 1 + sel $end
$var wire 1 #$ out $end
$upscope $end
$scope module result_mux_5 $end
$var wire 1 $$ in0 $end
$var wire 1 %$ in1 $end
$var wire 1 + sel $end
$var wire 1 &$ out $end
$upscope $end
$scope module result_mux_6 $end
$var wire 1 '$ in0 $end
$var wire 1 ($ in1 $end
$var wire 1 + sel $end
$var wire 1 )$ out $end
$upscope $end
$scope module result_mux_7 $end
$var wire 1 *$ in0 $end
$var wire 1 +$ in1 $end
$var wire 1 + sel $end
$var wire 1 ,$ out $end
$upscope $end
$scope module sl_ins_00 $end
$var wire 1 -$ in0 $end
$var wire 1 .$ in1 $end
$var wire 1 /$ sel $end
$var wire 1 0$ out $end
$upscope $end
$scope module sl_ins_01 $end
$var wire 1 1$ in0 $end
$var wire 1 2$ in1 $end
$var wire 1 3$ sel $end
$var wire 1 4$ out $end
$upscope $end
$scope module sl_ins_02 $end
$var wire 1 5$ in0 $end
$var wire 1 6$ in1 $end
$var wire 1 7$ sel $end
$var wire 1 8$ out $end
$upscope $end
$scope module sl_ins_03 $end
$var wire 1 9$ in0 $end
$var wire 1 :$ in1 $end
$var wire 1 ;$ sel $end
$var wire 1 <$ out $end
$upscope $end
$scope module sl_ins_04 $end
$var wire 1 =$ in0 $end
$var wire 1 >$ in1 $end
$var wire 1 ?$ sel $end
$var wire 1 @$ out $end
$upscope $end
$scope module sl_ins_05 $end
$var wire 1 A$ in0 $end
$var wire 1 B$ in1 $end
$var wire 1 C$ sel $end
$var wire 1 D$ out $end
$upscope $end
$scope module sl_ins_06 $end
$var wire 1 E$ in0 $end
$var wire 1 F$ in1 $end
$var wire 1 G$ sel $end
$var wire 1 H$ out $end
$upscope $end
$scope module sl_ins_07 $end
$var wire 1 I$ in0 $end
$var wire 1 J$ in1 $end
$var wire 1 K$ sel $end
$var wire 1 L$ out $end
$upscope $end
$scope module sl_ins_08 $end
$var wire 1 M$ in0 $end
$var wire 1 N$ in1 $end
$var wire 1 O$ sel $end
$var wire 1 P$ out $end
$upscope $end
$scope module sl_ins_09 $end
$var wire 1 Q$ in0 $end
$var wire 1 R$ in1 $end
$var wire 1 S$ sel $end
$var wire 1 T$ out $end
$upscope $end
$scope module sl_ins_10 $end
$var wire 1 U$ in0 $end
$var wire 1 V$ in1 $end
$var wire 1 W$ sel $end
$var wire 1 X$ out $end
$upscope $end
$scope module sl_ins_11 $end
$var wire 1 Y$ in0 $end
$var wire 1 Z$ in1 $end
$var wire 1 [$ sel $end
$var wire 1 \$ out $end
$upscope $end
$scope module sl_ins_12 $end
$var wire 1 ]$ in0 $end
$var wire 1 ^$ in1 $end
$var wire 1 _$ sel $end
$var wire 1 `$ out $end
$upscope $end
$scope module sl_ins_13 $end
$var wire 1 a$ in0 $end
$var wire 1 b$ in1 $end
$var wire 1 c$ sel $end
$var wire 1 d$ out $end
$upscope $end
$scope module sl_ins_14 $end
$var wire 1 e$ in0 $end
$var wire 1 f$ in1 $end
$var wire 1 g$ sel $end
$var wire 1 h$ out $end
$upscope $end
$scope module sl_ins_15 $end
$var wire 1 i$ in0 $end
$var wire 1 j$ in1 $end
$var wire 1 k$ sel $end
$var wire 1 l$ out $end
$upscope $end
$scope module sl_ins_16 $end
$var wire 1 m$ in0 $end
$var wire 1 n$ in1 $end
$var wire 1 o$ sel $end
$var wire 1 p$ out $end
$upscope $end
$scope module sl_ins_17 $end
$var wire 1 q$ in0 $end
$var wire 1 r$ in1 $end
$var wire 1 s$ sel $end
$var wire 1 t$ out $end
$upscope $end
$scope module sl_ins_18 $end
$var wire 1 u$ in0 $end
$var wire 1 v$ in1 $end
$var wire 1 w$ sel $end
$var wire 1 x$ out $end
$upscope $end
$scope module sl_ins_19 $end
$var wire 1 y$ in0 $end
$var wire 1 z$ in1 $end
$var wire 1 {$ sel $end
$var wire 1 |$ out $end
$upscope $end
$scope module sl_ins_20 $end
$var wire 1 }$ in0 $end
$var wire 1 ~$ in1 $end
$var wire 1 !% sel $end
$var wire 1 "% out $end
$upscope $end
$scope module sl_ins_21 $end
$var wire 1 #% in0 $end
$var wire 1 $% in1 $end
$var wire 1 %% sel $end
$var wire 1 &% out $end
$upscope $end
$scope module sl_ins_22 $end
$var wire 1 '% in0 $end
$var wire 1 (% in1 $end
$var wire 1 )% sel $end
$var wire 1 *% out $end
$upscope $end
$scope module sl_ins_23 $end
$var wire 1 +% in0 $end
$var wire 1 ,% in1 $end
$var wire 1 -% sel $end
$var wire 1 .% out $end
$upscope $end
$scope module sr_ins_00 $end
$var wire 1 /% in0 $end
$var wire 1 0% in1 $end
$var wire 1 1% sel $end
$var wire 1 2% out $end
$upscope $end
$scope module sr_ins_01 $end
$var wire 1 3% in0 $end
$var wire 1 4% in1 $end
$var wire 1 5% sel $end
$var wire 1 6% out $end
$upscope $end
$scope module sr_ins_02 $end
$var wire 1 7% in0 $end
$var wire 1 8% in1 $end
$var wire 1 9% sel $end
$var wire 1 :% out $end
$upscope $end
$scope module sr_ins_03 $end
$var wire 1 ;% in0 $end
$var wire 1 <% in1 $end
$var wire 1 =% sel $end
$var wire 1 >% out $end
$upscope $end
$scope module sr_ins_04 $end
$var wire 1 ?% in0 $end
$var wire 1 @% in1 $end
$var wire 1 A% sel $end
$var wire 1 B% out $end
$upscope $end
$scope module sr_ins_05 $end
$var wire 1 C% in0 $end
$var wire 1 D% in1 $end
$var wire 1 E% sel $end
$var wire 1 F% out $end
$upscope $end
$scope module sr_ins_06 $end
$var wire 1 G% in0 $end
$var wire 1 H% in1 $end
$var wire 1 I% sel $end
$var wire 1 J% out $end
$upscope $end
$scope module sr_ins_07 $end
$var wire 1 K% in0 $end
$var wire 1 L% in1 $end
$var wire 1 M% sel $end
$var wire 1 N% out $end
$upscope $end
$scope module sr_ins_08 $end
$var wire 1 O% in0 $end
$var wire 1 P% in1 $end
$var wire 1 Q% sel $end
$var wire 1 R% out $end
$upscope $end
$scope module sr_ins_09 $end
$var wire 1 S% in0 $end
$var wire 1 T% in1 $end
$var wire 1 U% sel $end
$var wire 1 V% out $end
$upscope $end
$scope module sr_ins_10 $end
$var wire 1 W% in0 $end
$var wire 1 X% in1 $end
$var wire 1 Y% sel $end
$var wire 1 Z% out $end
$upscope $end
$scope module sr_ins_11 $end
$var wire 1 [% in0 $end
$var wire 1 \% in1 $end
$var wire 1 ]% sel $end
$var wire 1 ^% out $end
$upscope $end
$scope module sr_ins_12 $end
$var wire 1 _% in0 $end
$var wire 1 `% in1 $end
$var wire 1 a% sel $end
$var wire 1 b% out $end
$upscope $end
$scope module sr_ins_13 $end
$var wire 1 c% in0 $end
$var wire 1 d% in1 $end
$var wire 1 e% sel $end
$var wire 1 f% out $end
$upscope $end
$scope module sr_ins_14 $end
$var wire 1 g% in0 $end
$var wire 1 h% in1 $end
$var wire 1 i% sel $end
$var wire 1 j% out $end
$upscope $end
$scope module sr_ins_15 $end
$var wire 1 k% in0 $end
$var wire 1 l% in1 $end
$var wire 1 m% sel $end
$var wire 1 n% out $end
$upscope $end
$scope module sr_ins_16 $end
$var wire 1 o% in0 $end
$var wire 1 p% in1 $end
$var wire 1 q% sel $end
$var wire 1 r% out $end
$upscope $end
$scope module sr_ins_17 $end
$var wire 1 s% in0 $end
$var wire 1 t% in1 $end
$var wire 1 u% sel $end
$var wire 1 v% out $end
$upscope $end
$scope module sr_ins_18 $end
$var wire 1 w% in0 $end
$var wire 1 x% in1 $end
$var wire 1 y% sel $end
$var wire 1 z% out $end
$upscope $end
$scope module sr_ins_19 $end
$var wire 1 {% in0 $end
$var wire 1 |% in1 $end
$var wire 1 }% sel $end
$var wire 1 ~% out $end
$upscope $end
$scope module sr_ins_20 $end
$var wire 1 !& in0 $end
$var wire 1 "& in1 $end
$var wire 1 #& sel $end
$var wire 1 $& out $end
$upscope $end
$scope module sr_ins_21 $end
$var wire 1 %& in0 $end
$var wire 1 && in1 $end
$var wire 1 '& sel $end
$var wire 1 (& out $end
$upscope $end
$scope module sr_ins_22 $end
$var wire 1 )& in0 $end
$var wire 1 *& in1 $end
$var wire 1 +& sel $end
$var wire 1 ,& out $end
$upscope $end
$scope module sr_ins_23 $end
$var wire 1 -& in0 $end
$var wire 1 .& in1 $end
$var wire 1 /& sel $end
$var wire 1 0& out $end
$upscope $end
$upscope $end
$scope module sra_inst $end
$var wire 8 1& sra_y [7:0] $end
$var wire 8 2& sra_x [7:0] $end
$var wire 8 3& RESULT [7:0] $end
$var wire 8 4& DATA2 [7:0] $end
$var wire 8 5& DATA1 [7:0] $end
$var wire 3 6& AMOUNT [2:0] $end
$scope module sr_ins_00 $end
$var wire 1 7& in0 $end
$var wire 1 8& in1 $end
$var wire 1 9& sel $end
$var wire 1 :& out $end
$upscope $end
$scope module sr_ins_01 $end
$var wire 1 ;& in0 $end
$var wire 1 <& in1 $end
$var wire 1 =& sel $end
$var wire 1 >& out $end
$upscope $end
$scope module sr_ins_02 $end
$var wire 1 ?& in0 $end
$var wire 1 @& in1 $end
$var wire 1 A& sel $end
$var wire 1 B& out $end
$upscope $end
$scope module sr_ins_03 $end
$var wire 1 C& in0 $end
$var wire 1 D& in1 $end
$var wire 1 E& sel $end
$var wire 1 F& out $end
$upscope $end
$scope module sr_ins_04 $end
$var wire 1 G& in0 $end
$var wire 1 H& in1 $end
$var wire 1 I& sel $end
$var wire 1 J& out $end
$upscope $end
$scope module sr_ins_05 $end
$var wire 1 K& in0 $end
$var wire 1 L& in1 $end
$var wire 1 M& sel $end
$var wire 1 N& out $end
$upscope $end
$scope module sr_ins_06 $end
$var wire 1 O& in0 $end
$var wire 1 P& in1 $end
$var wire 1 Q& sel $end
$var wire 1 R& out $end
$upscope $end
$scope module sr_ins_07 $end
$var wire 1 S& in0 $end
$var wire 1 T& in1 $end
$var wire 1 U& sel $end
$var wire 1 V& out $end
$upscope $end
$scope module sr_ins_08 $end
$var wire 1 W& in0 $end
$var wire 1 X& in1 $end
$var wire 1 Y& sel $end
$var wire 1 Z& out $end
$upscope $end
$scope module sr_ins_09 $end
$var wire 1 [& in0 $end
$var wire 1 \& in1 $end
$var wire 1 ]& sel $end
$var wire 1 ^& out $end
$upscope $end
$scope module sr_ins_10 $end
$var wire 1 _& in0 $end
$var wire 1 `& in1 $end
$var wire 1 a& sel $end
$var wire 1 b& out $end
$upscope $end
$scope module sr_ins_11 $end
$var wire 1 c& in0 $end
$var wire 1 d& in1 $end
$var wire 1 e& sel $end
$var wire 1 f& out $end
$upscope $end
$scope module sr_ins_12 $end
$var wire 1 g& in0 $end
$var wire 1 h& in1 $end
$var wire 1 i& sel $end
$var wire 1 j& out $end
$upscope $end
$scope module sr_ins_13 $end
$var wire 1 k& in0 $end
$var wire 1 l& in1 $end
$var wire 1 m& sel $end
$var wire 1 n& out $end
$upscope $end
$scope module sr_ins_14 $end
$var wire 1 o& in0 $end
$var wire 1 p& in1 $end
$var wire 1 q& sel $end
$var wire 1 r& out $end
$upscope $end
$scope module sr_ins_15 $end
$var wire 1 s& in0 $end
$var wire 1 t& in1 $end
$var wire 1 u& sel $end
$var wire 1 v& out $end
$upscope $end
$scope module sr_ins_16 $end
$var wire 1 w& in0 $end
$var wire 1 x& in1 $end
$var wire 1 y& sel $end
$var wire 1 z& out $end
$upscope $end
$scope module sr_ins_17 $end
$var wire 1 {& in0 $end
$var wire 1 |& in1 $end
$var wire 1 }& sel $end
$var wire 1 ~& out $end
$upscope $end
$scope module sr_ins_18 $end
$var wire 1 !' in0 $end
$var wire 1 "' in1 $end
$var wire 1 #' sel $end
$var wire 1 $' out $end
$upscope $end
$scope module sr_ins_19 $end
$var wire 1 %' in0 $end
$var wire 1 &' in1 $end
$var wire 1 '' sel $end
$var wire 1 (' out $end
$upscope $end
$scope module sr_ins_20 $end
$var wire 1 )' in0 $end
$var wire 1 *' in1 $end
$var wire 1 +' sel $end
$var wire 1 ,' out $end
$upscope $end
$scope module sr_ins_21 $end
$var wire 1 -' in0 $end
$var wire 1 .' in1 $end
$var wire 1 /' sel $end
$var wire 1 0' out $end
$upscope $end
$scope module sr_ins_22 $end
$var wire 1 1' in0 $end
$var wire 1 2' in1 $end
$var wire 1 3' sel $end
$var wire 1 4' out $end
$upscope $end
$scope module sr_ins_23 $end
$var wire 1 5' in0 $end
$var wire 1 6' in1 $end
$var wire 1 7' sel $end
$var wire 1 8' out $end
$upscope $end
$upscope $end
$upscope $end
$scope module OFFSETADDER $end
$var wire 22 9' signBits [21:0] $end
$var wire 32 :' TARGET [31:0] $end
$var wire 32 ;' PCADDER [31:0] $end
$var wire 8 <' OFFSET [7:0] $end
$upscope $end
$scope module PCADD $end
$var wire 32 =' PC [31:0] $end
$var wire 32 >' PCADDER [31:0] $end
$upscope $end
$scope module comLogic $end
$var wire 32 ?' INSTRUCTION [31:0] $end
$var wire 3 @' WRITEREG [2:0] $end
$var wire 3 A' READREG2 [2:0] $end
$var wire 3 B' READREG1 [2:0] $end
$var wire 8 C' OFFSET [7:0] $end
$var wire 8 D' IMMEDIATE [7:0] $end
$var wire 3 E' AMOUNT [2:0] $end
$upscope $end
$scope module complement $end
$var wire 8 F' op_number [7:0] $end
$var wire 8 G' ip_number [7:0] $end
$upscope $end
$scope module control $end
$var wire 32 H' INSTRUCTION [31:0] $end
$var reg 3 I' ALUOP [2:0] $end
$var reg 1 ; BRANCH $end
$var reg 1 8 JUMP $end
$var reg 1 7 MUX1 $end
$var reg 1 5 MUX2 $end
$var reg 8 J' OPCODE [7:0] $end
$var reg 1 + SHIFT_op $end
$var reg 1 ) WRITEENABLE $end
$upscope $end
$scope module flow $end
$var wire 1 ; BRANCH $end
$var wire 1 : FLOWSELECT $end
$var wire 1 8 JUMP $end
$var wire 1 ' ZERO $end
$upscope $end
$scope module mux1 $end
$var wire 8 K' DATA2 [7:0] $end
$var wire 1 7 SELECT $end
$var wire 8 L' DATA1 [7:0] $end
$var reg 8 M' OUTPUT [7:0] $end
$upscope $end
$scope module mux2 $end
$var wire 8 N' DATA1 [7:0] $end
$var wire 8 O' DATA2 [7:0] $end
$var wire 1 5 SELECT $end
$var reg 8 P' OUTPUT [7:0] $end
$upscope $end
$scope module mux3 $end
$var wire 32 Q' DATA1 [31:0] $end
$var wire 32 R' DATA2 [31:0] $end
$var wire 1 : SELECT $end
$var reg 32 S' OUTPUT [31:0] $end
$upscope $end
$scope module register $end
$var wire 1 # CLK $end
$var wire 8 T' IN [7:0] $end
$var wire 3 U' INADDRESS [2:0] $end
$var wire 8 V' OUT1 [7:0] $end
$var wire 3 W' OUT1ADDRESS [2:0] $end
$var wire 8 X' OUT2 [7:0] $end
$var wire 3 Y' OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 ) WRITE $end
$scope begin $ivl_for_loop0 $end
$var integer 32 Z' i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module register $end
$var reg 8 [' \registers[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module register $end
$var reg 8 \' \registers[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module register $end
$var reg 8 ]' \registers[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module register $end
$var reg 8 ^' \registers[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module register $end
$var reg 8 _' \registers[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module register $end
$var reg 8 `' \registers[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module register $end
$var reg 8 a' \registers[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module register $end
$var reg 8 b' \registers[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx b'
bx a'
bx `'
bx _'
bx ^'
bx ]'
bx \'
bx ['
bx Z'
bx Y'
bx X'
bx W'
bx V'
bx U'
bx T'
bx S'
bx R'
bx Q'
bx P'
bx O'
bx N'
bx M'
bx L'
bx K'
bx J'
bx I'
bx H'
bx G'
bx F'
bx E'
bx D'
bx C'
bx B'
bx A'
bx @'
bx ?'
bx >'
bx ='
bx <'
bx ;'
bx :'
bx 9'
x8'
x7'
x6'
x5'
x4'
x3'
x2'
x1'
x0'
x/'
x.'
x-'
x,'
x+'
x*'
x)'
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
x{&
xz&
xy&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
x;&
x:&
x9&
x8&
x7&
bx 6&
bx 5&
bx 4&
bx 3&
bx 2&
bx 1&
x0&
x/&
0.&
x-&
x,&
x+&
0*&
x)&
x(&
x'&
0&&
x%&
x$&
x#&
0"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
0l%
xk%
xj%
xi%
0h%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
xY%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
0L%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
0z$
xy$
xx$
xw$
0v$
xu$
xt$
xs$
0r$
xq$
xp$
xo$
0n$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
0R$
xQ$
xP$
xO$
0N$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
0.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
bx r#
bx q#
bx p#
bx o#
bx n#
bx m#
bx l#
bx k#
bx j#
bx i#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
x]"
x\"
0["
xZ"
xY"
xX"
xW"
0V"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
0L"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
0?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
0/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
0z
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
0^
x]
x\
x[
bx Z
bx Y
bx X
xW
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
x;
x:
bx 9
x8
x7
bx 6
x5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
bx *
x)
bx (
x'
bx &
b1000 %
1$
0#
bx "
bx !
$end
#4
b0 b'
b0 a'
b0 `'
b0 _'
b0 ^'
b0 ]'
b0 \'
b0 ['
b1000 Z'
1#
#5
0:
0;
08
b0 >
b0 H
b0 I'
05
07
1)
b0 J'
b1001 "
b1001 &
b1001 ?'
b1001 H'
b0 !
b0 ?
b0 ='
#6
0x
0-"
0t
0*"
0p
0J"
0'"
0l
0T"
0G"
0$"
0h
0Y"
0Q"
0D"
0!"
0d
0]"
0[
0N"
0A"
0|
0`
0Z"
0X"
0U"
0R"
0O"
0K"
0H"
0E"
0B"
0>"
0+"
0("
0%"
0""
0}
0y
0v
0r
0n
0j
0f
0b
0]
0t#
0*$
bx1xx1 C
bx1xx1 ^"
b0x00x F
b0x00x P
bx0 n#
00$
b0xxxxxxx k#
0N%
b1001 E
b1001 S
b1001 4
b1001 I
b1001 N
b1001 Q
b1001 T
b1001 Y
b1001 _"
b1001 d"
b1001 p#
b1001 4&
b1001 P'
19&
1=&
1A&
1E&
1I&
1M&
1Q&
1U&
0Y&
0]&
0a&
0e&
0i&
0m&
0q&
0u&
0y&
0}&
0#'
0''
0+'
0/'
03'
07'
1/$
13$
17$
1;$
1?$
1C$
1G$
1K$
0O$
0S$
0W$
0[$
0_$
0c$
0g$
0k$
0o$
0s$
0w$
0{$
0!%
0%%
0)%
0-%
11%
15%
19%
1=%
1A%
1E%
1I%
1M%
0Q%
0U%
0Y%
0]%
0a%
0e%
0i%
0m%
0q%
0u%
0y%
0}%
0#&
0'&
0+&
0/&
1i"
1m"
1q"
1u"
1y"
1}"
1##
1'#
0+#
0/#
03#
07#
0;#
0?#
0C#
0G#
0K#
0O#
0S#
0W#
0[#
0_#
0c#
0g#
b0 9'
b1 .
b1 A'
b1 Y'
b1001 9
b1001 D'
b1001 N'
b1 <
b1 K
b1 f"
b1 r#
b1 6&
b1 E'
b0 /
b0 B'
b0 W'
b0 (
b0 @'
b0 U'
b0 1
b0 <'
b0 C'
b100 3
b100 S'
b100 0
b100 ;'
b100 >'
b100 Q'
0$
#7
0'
b1001 =
b1001 L
b1001 T'
#8
0\"
0W"
0W
0P"
0M"
0S"
0F"
0C"
0@"
0I"
0,$
0u#
0x#
0{#
0~#
0#$
0&$
b0 A
b0 o#
0)$
09"
06"
03"
00"
0w#
0z#
0}#
0"$
0%$
0($
0+$
0s#
0v#
0y#
0|#
0!$
0$$
0'$
0<"
0="
0:&
0>&
0B&
0F&
0J&
0N&
0R&
04$
08$
0<$
0@$
0D$
0H$
b0 n#
0L$
02%
06%
0:%
0>%
0B%
0F%
b0 k#
0J%
0j"
0n"
0r"
0v"
0z"
0~"
0$#
0:"
0,"
0)"
0&"
0#"
0~
0{
07&
0;&
08&
0?&
0<&
0C&
0@&
0G&
0D&
0K&
0H&
0O&
0L&
0S&
0P&
02$
0-$
06$
01$
0:$
05$
0>$
09$
0B$
0=$
0F$
0A$
0J$
0E$
0I$
0/%
03%
00%
07%
04%
0;%
08%
0?%
0<%
0C%
0@%
0G%
0D%
0K%
0H%
0g"
0k"
0h"
0o"
0l"
0s"
0p"
0w"
0t"
0{"
0x"
0!#
0|"
0%#
0"#
07"
0Z&
0^&
0b&
0f&
0j&
0n&
0r&
b0 1&
0v&
0P$
0T$
0X$
0\$
0`$
0d$
0h$
b0 l#
0l$
0R%
0V%
0Z%
0^%
0b%
0f%
0j%
b0 i#
0n%
0,#
00#
04#
08#
0<#
0@#
0D#
b0 a"
0H#
04"
0w
0s
0o
0k
0g
0c
0_
0W&
0[&
0_&
0X&
0c&
0\&
0g&
0`&
0k&
0d&
0o&
0h&
0s&
0l&
0V$
0M$
0Z$
0Q$
0^$
0U$
0b$
0Y$
0f$
0]$
0j$
0a$
0e$
0i$
0O%
0S%
0W%
0P%
0[%
0T%
0_%
0X%
0c%
0\%
0g%
0`%
0k%
0d%
0)#
0-#
01#
0*#
05#
0.#
09#
02#
0=#
06#
0A#
0:#
0E#
0>#
01"
b0 @
b0 3&
0V&
0z&
0~&
0$'
0('
0,'
00'
04'
b0 2&
08'
0p$
0t$
0x$
0|$
0"%
0&%
0*%
b0 m#
0.%
0r%
0v%
0z%
0~%
0$&
0(&
0,&
b0 j#
00&
b0 B
b0 c"
0(#
0L#
0P#
0T#
0X#
0\#
0`#
0d#
b0 b"
0h#
0;"
08"
05"
02"
0."
0u
0q
0m
0i
0e
0a
0\
b0 D
b0 V
b0 X
b0 6
b0 M'
b0 O'
0T&
0p&
0t&
0x&
0w&
0|&
0{&
0"'
0!'
0&'
0%'
0*'
0)'
0.'
0-'
02'
01'
06'
05'
0m$
0q$
0u$
0y$
0~$
0}$
0$%
0#%
0(%
0'%
0,%
0+%
0p%
0o%
0t%
0s%
0x%
0w%
0|%
0{%
0!&
0%&
0)&
0-&
0&#
0B#
0F#
0J#
0I#
0N#
0M#
0R#
0Q#
0V#
0U#
0Z#
0Y#
0^#
0]#
0b#
0a#
0f#
0e#
b1001 C
b1001 ^"
b0 F
b0 P
b100 *
b100 :'
b100 R'
b0 ,
b0 G'
b0 L'
b0 X'
b1001 G
b1001 M
b0 -
b0 J
b0 O
b0 R
b0 U
b0 Z
b0 `"
b0 e"
b0 q#
b0 5&
b0 V'
0#
#9
b0 2
b0 F'
b0 K'
#12
1#
#13
b1001 ['
b10000000000000001 "
b10000000000000001 &
b10000000000000001 ?'
b10000000000000001 H'
b100 !
b100 ?
b100 ='
#14
b1 C
b1 ^"
b1 E
b1 S
b1 G
b1 M
b1 4
b1 I
b1 N
b1 Q
b1 T
b1 Y
b1 _"
b1 d"
b1 p#
b1 4&
b1 P'
b1 9
b1 D'
b1 N'
b1 (
b1 @'
b1 U'
b1 1
b1 <'
b1 C'
b1000 3
b1000 S'
b1000 0
b1000 ;'
b1000 >'
b1000 Q'
#15
xx#
x#$
b0x0xx0 A
b0x0xx0 o#
x{#
10"
1w#
1"$
1y#
b100 @
b100 3&
1B&
14$
b10010 n#
1@$
b100 k#
1:%
1r"
1~
17&
1C&
1@&
12$
1-$
1>$
19$
1/%
1;%
18%
1g"
1s"
1p"
1Z&
b1001 1&
1f&
1P$
b1001 l#
1\$
1R%
b1001 i#
1^%
1,#
b1001 a"
18#
1g
1W&
1c&
1\&
1V$
1M$
1b$
1Y$
1O%
1[%
1T%
1)#
15#
1.#
1z&
b1001 2&
1('
1p$
b1001 m#
1|$
1r%
b1001 j#
1~%
b10000100 B
b10000100 c"
1(#
1L#
b1001 b"
1X#
1e
b1001 D
b1001 V
b1001 X
1w&
1%'
1m$
1y$
1~$
1,%
1o%
1{%
1&#
1B#
1I#
1U#
1Z#
1f#
b1001 C
b1001 ^"
b1 F
b1 P
b1 =
b1 L
b1 T'
b1010 G
b1010 M
b1001 -
b1001 J
b1001 O
b1001 R
b1001 U
b1001 Z
b1001 `"
b1001 e"
b1001 q#
b1001 5&
b1001 V'
#16
b1100 *
b1100 :'
b1100 R'
0#
#20
1#
#21
00"
0~
0g
0e
b0 D
b0 V
b0 X
b0 F
b0 P
b0 E
b0 S
b1001 G
b1001 M
b0 4
b0 I
b0 N
b0 Q
b0 T
b0 Y
b0 _"
b0 d"
b0 p#
b0 4&
b0 P'
b1 >
b1 H
b1 I'
15
17
b11 J'
b11000001000000000000000001 "
b11000001000000000000000001 &
b11000001000000000000000001 ?'
b11000001000000000000000001 H'
b1000 !
b1000 ?
b1000 ='
b1 \'
#22
b100 (
b100 @'
b100 U'
b100 1
b100 <'
b100 C'
b1100 3
b1100 S'
b1100 0
b1100 ;'
b1100 >'
b1100 Q'
#23
b1001 =
b1001 L
b1001 T'
b1 ,
b1 G'
b1 L'
b1 X'
#24
1J"
0T"
1<"
0Y"
0Q"
1:"
0]"
0[
0N"
17"
0W
0P"
0C"
14"
11"
0S"
0F"
06"
1#"
1~
1\"
1W"
1M"
0I"
1@"
09"
00"
1&"
1{
1k
1g
1_
1Z"
1U"
1K"
1H"
1>"
18"
1."
1%"
1y
1j
1e
1]
b11110111 D
b11110111 V
b11110111 X
b11111111 C
b11111111 ^"
b1001 F
b1001 P
b11111111 E
b11111111 S
b1000 G
b1000 M
b11111111 4
b11111111 I
b11111111 N
b11111111 Q
b11111111 T
b11111111 Y
b11111111 _"
b11111111 d"
b11111111 p#
b11111111 4&
b11111111 P'
b11111111 6
b11111111 M'
b11111111 O'
b11111111 2
b11111111 F'
b11111111 K'
b11100 *
b11100 :'
b11100 R'
0#
#26
b1000 =
b1000 L
b1000 T'
#28
1#
#29
bx J'
b1000 _'
bx "
bx &
bx ?'
bx H'
b1100 !
b1100 ?
b1100 ='
#30
x,$
x+$
x)$
x&$
xL$
xz"
xz#
x($
x%$
xJ$
xE$
xB$
x=$
xI$
xv#
xw"
xt"
xo"
xl"
x%#
x"#
x{"
xx"
x>&
x8$
xH$
xD$
xh$
x`$
xl$
xu#
bx A
bx o#
x~#
x6%
xn"
x$#
x~"
x<#
x4#
xH#
x@#
x7&
x;&
x8&
xC&
x@&
xW&
xc&
x\&
xt#
xw#
x}#
x"$
x2$
x-$
x:$
x5$
x>$
x9$
xF$
xA$
xV$
xM$
xb$
xY$
xf$
x]$
xi$
xs#
xy#
x|#
x/%
x3%
x0%
x;%
x8%
xO%
x[%
xT%
xg"
xk"
xh"
xs"
xp"
x!#
x|"
x)#
x5#
x.#
x9#
x2#
xE#
x>#
x:&
xB&
b0xxxx @
b0xxxx 3&
xF&
xZ&
x^&
b0x0xx 1&
xf&
xz&
b0x00x 2&
x('
x0$
x4$
x<$
bx n#
x@$
xP$
xX$
x\$
bx0x l#
xd$
xp$
x|$
x"%
bx00xx00x m#
x.%
x2%
x:%
b0xxxx k#
x>%
xR%
xV%
b0x0xx i#
x^%
xr%
b0x00x j#
x~%
xj"
xr"
xv"
bx B
bx c"
x(#
x,#
x0#
x8#
bx a"
xD#
xL#
xX#
x\#
bx00xx00x b"
xh#
x9&
x=&
xA&
xE&
xI&
xM&
xQ&
xU&
xY&
x]&
xa&
xe&
xi&
xm&
xq&
xu&
xy&
x}&
x#'
x''
x+'
x/'
x3'
x7'
x/$
x3$
x7$
x;$
x?$
xC$
xG$
xK$
xO$
xS$
xW$
x[$
x_$
xc$
xg$
xk$
xo$
xs$
xw$
x{$
x!%
x%%
x)%
x-%
x1%
x5%
x9%
x=%
xA%
xE%
xI%
xM%
xQ%
xU%
xY%
x]%
xa%
xe%
xi%
xm%
xq%
xu%
xy%
x}%
x#&
x'&
x+&
x/&
xi"
xm"
xq"
xu"
xy"
x}"
x##
x'#
x+#
x/#
x3#
x7#
x;#
x?#
xC#
xG#
xK#
xO#
xS#
xW#
x[#
x_#
xc#
xg#
bx 9'
bx .
bx A'
bx Y'
bx 9
bx D'
bx N'
bx <
bx K
bx f"
bx r#
bx 6&
bx E'
bx /
bx B'
bx W'
bx (
bx @'
bx U'
bx 1
bx <'
bx C'
b10000 3
b10000 S'
b10000 0
b10000 ;'
b10000 >'
b10000 Q'
#32
x*$
x'$
x$$
x!$
xJ&
xN%
xJ%
xF%
bx k#
xB%
x?&
x<&
xG&
xD&
xK&
xH&
x6$
x1$
x7%
x4%
xG%
xD%
x?%
x<%
xK%
xH%
xC%
x@%
x]"
xY"
x[
xT"
xQ"
xN"
xG"
xD"
xA"
x|
xN&
xR&
xb&
xj&
xn&
bx l#
xT$
xZ%
xj%
xb%
xn%
bx i#
xf%
x\"
xW
xW"
xS"
xP"
xM"
xI"
xF"
xC"
x@"
x<"
x="
x9"
x:"
x6"
x0"
x3"
x,"
x-"
x)"
x*"
x&"
x'"
x~
x#"
x{
xw
xs
xo
xk
xg
x_
xc
xO&
xL&
xS&
xP&
x[&
x_&
xX&
xg&
x`&
xk&
xd&
xo&
xh&
xs&
xl&
xZ$
xQ$
x^$
xU$
xj$
xa$
xe$
xS%
xW%
xP%
x_%
xX%
xc%
x\%
xg%
x`%
xk%
xd%
x-#
x1#
x*#
x=#
x6#
xA#
x:#
xJ"
x7"
x4"
x1"
x$"
x!"
xx
xt
xp
xl
xh
xd
x`
bx @
bx 3&
xV&
xr&
bx 1&
xv&
x~&
x$'
x,'
x0'
x4'
bx 2&
x8'
xt$
xx$
x&%
bx m#
x*%
xv%
xz%
x$&
x(&
x,&
bx j#
x0&
xP#
xT#
x`#
bx b"
xd#
xZ"
xX"
xU"
xR"
xO"
xK"
xH"
xE"
xB"
x>"
x;"
x8"
x5"
x2"
x."
x+"
x("
x%"
x""
x}
xy
xv
xu
xr
xq
xn
xm
xj
xi
xf
xe
xb
xa
x]
x\
bx D
bx V
bx X
xT&
xp&
xt&
xx&
xw&
x|&
x{&
x"'
x!'
x&'
x%'
x*'
x)'
x.'
x-'
x2'
x1'
x6'
x5'
xm$
xq$
xu$
xy$
x~$
x}$
x$%
x#%
x(%
x'%
x,%
x+%
xp%
xo%
xt%
xs%
xx%
xw%
x|%
x{%
x!&
x%&
x)&
x-&
x&#
xB#
xF#
xJ#
xI#
xN#
xM#
xR#
xQ#
xV#
xU#
xZ#
xY#
x^#
x]#
xb#
xa#
xf#
xe#
bx F
bx P
x'
bx =
bx L
bx T'
bx ,
bx G'
bx L'
bx X'
bx G
bx M
bx -
bx J
bx O
bx R
bx U
bx Z
bx `"
bx e"
bx q#
bx 5&
bx V'
bx *
bx :'
bx R'
0#
#33
bx C
bx ^"
bx E
bx S
bx 4
bx I
bx N
bx Q
bx T
bx Y
bx _"
bx d"
bx p#
bx 4&
bx P'
bx 6
bx M'
bx O'
bx 2
bx F'
bx K'
#36
1#
#37
b10000 !
b10000 ?
b10000 ='
#38
b10100 3
b10100 S'
b10100 0
b10100 ;'
b10100 >'
b10100 Q'
#40
0#
#44
1#
#45
b10100 !
b10100 ?
b10100 ='
#46
b11000 3
b11000 S'
b11000 0
b11000 ;'
b11000 >'
b11000 Q'
#48
0#
#52
1#
#53
b11000 !
b11000 ?
b11000 ='
#54
b11100 3
b11100 S'
b11100 0
b11100 ;'
b11100 >'
b11100 Q'
#56
0#
#60
1#
#61
b11100 !
b11100 ?
b11100 ='
#62
b100000 3
b100000 S'
b100000 0
b100000 ;'
b100000 >'
b100000 Q'
#64
0#
#68
1#
#69
b100000 !
b100000 ?
b100000 ='
#70
b100100 3
b100100 S'
b100100 0
b100100 ;'
b100100 >'
b100100 Q'
#72
0#
#76
1#
#77
b100100 !
b100100 ?
b100100 ='
#78
b101000 3
b101000 S'
b101000 0
b101000 ;'
b101000 >'
b101000 Q'
#80
0#
#84
1#
#85
b101000 !
b101000 ?
b101000 ='
#86
b101100 3
b101100 S'
b101100 0
b101100 ;'
b101100 >'
b101100 Q'
#88
0#
#92
1#
#93
b101100 !
b101100 ?
b101100 ='
#94
b110000 3
b110000 S'
b110000 0
b110000 ;'
b110000 >'
b110000 Q'
#96
0#
#100
1#
#101
b110000 !
b110000 ?
b110000 ='
#102
b110100 3
b110100 S'
b110100 0
b110100 ;'
b110100 >'
b110100 Q'
#104
0#
#108
1#
#109
b110100 !
b110100 ?
b110100 ='
#110
b111000 3
b111000 S'
b111000 0
b111000 ;'
b111000 >'
b111000 Q'
#112
0#
#116
1#
#117
b111000 !
b111000 ?
b111000 ='
#118
b111100 3
b111100 S'
b111100 0
b111100 ;'
b111100 >'
b111100 Q'
#120
0#
#124
1#
#125
b111100 !
b111100 ?
b111100 ='
#126
b1000000 3
b1000000 S'
b1000000 0
b1000000 ;'
b1000000 >'
b1000000 Q'
#128
0#
#132
1#
#133
b1000000 !
b1000000 ?
b1000000 ='
#134
b1000100 3
b1000100 S'
b1000100 0
b1000100 ;'
b1000100 >'
b1000100 Q'
#136
0#
#140
1#
#141
b1000100 !
b1000100 ?
b1000100 ='
#142
b1001000 3
b1001000 S'
b1001000 0
b1001000 ;'
b1001000 >'
b1001000 Q'
#144
0#
#148
1#
#149
b1001000 !
b1001000 ?
b1001000 ='
#150
b1001100 3
b1001100 S'
b1001100 0
b1001100 ;'
b1001100 >'
b1001100 Q'
#152
0#
#156
1#
#157
b1001100 !
b1001100 ?
b1001100 ='
#158
b1010000 3
b1010000 S'
b1010000 0
b1010000 ;'
b1010000 >'
b1010000 Q'
#160
0#
#164
1#
#165
b1010000 !
b1010000 ?
b1010000 ='
#166
b1010100 3
b1010100 S'
b1010100 0
b1010100 ;'
b1010100 >'
b1010100 Q'
#168
0#
#172
1#
#173
b1010100 !
b1010100 ?
b1010100 ='
#174
b1011000 3
b1011000 S'
b1011000 0
b1011000 ;'
b1011000 >'
b1011000 Q'
#176
0#
#180
1#
#181
b1011000 !
b1011000 ?
b1011000 ='
#182
b1011100 3
b1011100 S'
b1011100 0
b1011100 ;'
b1011100 >'
b1011100 Q'
#184
0#
#188
1#
#189
b1011100 !
b1011100 ?
b1011100 ='
#190
b1100000 3
b1100000 S'
b1100000 0
b1100000 ;'
b1100000 >'
b1100000 Q'
#192
0#
#196
1#
#197
b1100000 !
b1100000 ?
b1100000 ='
#198
b1100100 3
b1100100 S'
b1100100 0
b1100100 ;'
b1100100 >'
b1100100 Q'
#200
0#
#204
1#
#205
b1100100 !
b1100100 ?
b1100100 ='
#206
b1101000 3
b1101000 S'
b1101000 0
b1101000 ;'
b1101000 >'
b1101000 Q'
